# DualTab Chrome扩展架构

DualTab是一个Chrome扩展，使用React和TypeScript构建，提供增强的新标签页和书签管理功能。本文档描述了扩展的架构和重构注意事项。

## 扩展组件架构

### 核心功能模块
- **存储管理**：封装Chrome存储API，提供缓存和错误处理
- **书签系统**：分类数据模型和书签操作工具函数
- **数据钩子**：状态管理React Hooks，处理存储、书签、背景等功能

### 用户界面模块
- **新标签页**：替代Chrome默认的新标签页，提供书签快速访问和分类管理
- **弹出窗口**：点击工具栏图标时显示的弹出界面，提供快速添加书签功能
- **设置界面**：提供扩展配置选项，包括背景图片、WebDAV同步等设置

### 后台服务
- **背景脚本**：处理扩展的生命周期事件、消息通信和书签同步
- **内容脚本**：在网页中运行，提取页面信息用于书签添加

## 重构注意事项

### 数据迁移
- 确保重构后的版本能够读取原有版本的数据格式
- 提供数据格式升级迁移机制
- 实现数据备份和恢复功能

### 性能考量
- 使用Chrome存储API的最佳实践，避免频繁读写
- 实现数据缓存机制，减少存储API调用
- 使用React性能优化技术，减少不必要的渲染

### 扩展权限
- 使用最小权限原则，只请求必要的权限
- 在manifest.json中正确配置权限和内容安全策略
- 确保跨域请求（如Unsplash API）正确配置

## 构建系统
Vite负责将React应用打包为Chrome扩展格式：
- [构建配置](mdc:vite.config.js): 定义了多个入口点，包括新标签页、弹出窗口和背景脚本
- 确保正确生成manifest.json和其他扩展所需文件

## 测试方法
- 在Chrome中加载dist目录作为未打包扩展
- 测试新标签页、弹出窗口和设置界面功能
- 验证数据保存、加载和同步功能
- 测试内外网模式切换和对应功能