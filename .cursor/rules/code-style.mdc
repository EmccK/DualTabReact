---
description: 
globs: 
alwaysApply: false
---
# DualTab 代码风格指南

本项目遵循以下代码风格和约定，确保代码一致性和可维护性。

## TypeScript 约定

- 使用TypeScript类型定义，避免使用`any`类型
- 对所有组件props和状态使用接口定义
- 使用可选链操作符(`?.`)和空值合并操作符(`??`)处理可能为空的值
- 导出类型和接口时使用命名导出

## React 约定

- 使用函数组件和Hooks，避免使用类组件
- 状态更新时使用函数形式，特别是依赖于先前状态的更新
- 使用解构赋值获取props和状态
- 为复杂组件编写单独的样式文件

## 项目结构

- 按功能组织文件，而不是按类型
- 组件相关的样式、测试和类型应放在同一目录下
- 可重用组件应放在`src/components`目录下
- 辅助函数应放在`src/utils`目录下
- 自定义钩子应放在`src/hooks`目录下

## 命名约定

- 组件使用PascalCase命名
- 文件名与组件名保持一致
- 接口名称前不使用`I`前缀
- 常量使用UPPER_SNAKE_CASE命名
- 变量和函数使用camelCase命名
