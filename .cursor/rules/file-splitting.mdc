# DualTab 文件拆分原则

本文档描述了DualTab项目在重构过程中的文件拆分原则和最佳实践。

## 核心拆分原则

### 单一职责原则
- 每个文件只负责一个明确的功能或组件
- 文件内容应具有内聚性，功能相关的代码放在一起
- 避免在一个文件中混合不同的关注点

### 合理的文件大小
- 保持文件大小适中，建议不超过200-300行代码
- 过大的文件应考虑进一步拆分为多个更小的模块
- 过小的文件如果关联紧密可以考虑合并

### 组件拆分策略
- 将复杂组件拆分为多个子组件，每个子组件放在单独文件中
- 拆分标准：视觉独立性、功能独立性、复用可能性
- 拆分后的子组件应有清晰的props接口和明确的职责

### 逻辑分离原则
- 将不同类型的逻辑代码分离到不同文件中：
  - UI组件：专注于渲染和用户交互
  - Hooks：负责状态管理和业务逻辑
  - 工具函数：提供纯函数工具方法
  - 类型定义：独立的类型文件
  - 常量：集中管理常量值

## 目录结构约定

### 按功能组织
- `src/components/`: UI组件，可按功能进一步分子目录
- `src/hooks/`: React Hooks，包含状态和业务逻辑
- `src/utils/`: 工具函数和辅助方法
- `src/types/`: TypeScript类型定义
- `src/models/`: 数据模型和相关方法
- `src/pages/`: 页面级组件，包含newtab和popup等

### 导入和导出约定
- 每个目录提供index.ts文件统一导出
- 相关组件可以放在同一目录下，通过index.ts统一导出
- 导入路径使用别名简化深层次导入